//@version=5
//@ hacwatch
//version=0.92
indicator("Multi Moving Average Ribbon", shorttitle="Multi MA Ribbon", overlay=false, timeframe="", timeframe_gaps=true)

ma(source, length, type) =>
    float result = 0
    if type == 'TEMA'  // Triple Exponential
        e = ta.ema(source, length)
        result := 3 * (e - ta.ema(e, length)) + ta.ema(ta.ema(e, length), length)
        result
    if type == "SMA" 
        result := ta.sma(source, length)
        result
    if type == "EMA" 
        result := ta.ema(source, length)
        result
    if type == "SMMA (RMA)" 
        result := ta.rma(source, length)
        result
    if type == "WMA"
        result := ta.wma(source, length)
        result
    if type == "VWMA"
        result := ta.vwma(source, length)
        result
    if type == 'HMA'  // Hull
        result := ta.wma(2 * ta.wma(source, length / 2) - ta.wma(source, length), math.round(math.sqrt(length)))
        result
    if type == 'DEMA'  // Double Exponential
        e = ta.ema(source, length)
        result := 2 * e - ta.ema(e, length)
        result
    if type == 'LSMA'
        result := ta.linreg(source, length, 0)
        result
    result

alllinewidth = input(2, defval=2, title="all line width", inline="MA Line", display = display.data_window)

show_ma1   = input(true, "MA №1", inline="MA #1", display = display.data_window)
ma1_type   = input.string("SMA", "", inline="MA #1", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA", "TEMA", "HMA", "DEMA", "LSMA"])
ma1_source = input(close  , "", inline="MA #1", display = display.data_window)
ma1_length = input.int(20  , "", inline="MA #1", minval=1)
ma1_color  = input.color(#f6c309, "", inline="MA #1", display = display.data_window)

ma1 = ma(ma1_source, ma1_length, ma1_type)
p11 = plot(show_ma1 ? ma1 : na, color = ma1_color, linewidth = alllinewidth, title="MA №1")
p12 = plot(show_ma1 ? ma1[2] : na, color = ma1_color, linewidth = alllinewidth, title="MA №1")

show_ma2   = input(true, "MA №2", inline="MA #2", display = display.data_window)
ma2_type   = input.string("SMA", "", inline="MA #2", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA", "TEMA", "HMA", "DEMA", "LSMA"])
ma2_source = input(close  , "", inline="MA #2", display = display.data_window)
ma2_length = input.int(20  , "", inline="MA #2", minval=1)
ma2_color  = input(#fb9800, "", inline="MA #2", display = display.data_window)
ma2 = ma(ma2_source, ma2_length, ma2_type)
p21=plot(show_ma2 ? ma2 : na, color = ma2_color, linewidth = alllinewidth, title="MA №2")
p22=plot(show_ma2 ? ma2[2] : na, color = ma2_color, linewidth = alllinewidth, title="MA №2")

show_ma3   = input(true, "MA №3", inline="MA #3", display = display.data_window)
ma3_type   = input.string("SMA", "", inline="MA #3", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA", "TEMA", "HMA", "DEMA", "LSMA"])
ma3_source = input(close  , "", inline="MA #3", display = display.data_window)
ma3_length = input.int(20 , "", inline="MA #3", minval=1)
ma3_color  = input(#fb6500, "", inline="MA #3", display = display.data_window)
ma3 = ma(ma3_source, ma3_length, ma3_type)
p31=plot(show_ma3 ? ma3 : na, color = ma3_color, linewidth = alllinewidth, title="MA №3")
p32=plot(show_ma3 ? ma3[2] : na, color = ma3_color, linewidth = alllinewidth, title="MA №3")

show_ma4   = input(true, "MA №4", inline="MA #4", display = display.data_window)
ma4_type   = input.string("SMA", "", inline="MA #4", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA", "TEMA", "HMA", "DEMA", "LSMA"])
ma4_source = input(close  , "", inline="MA #4", display = display.data_window)
ma4_length = input.int(20 , "", inline="MA #4", minval=1)
ma4_color  = input(#f60c0c, "", inline="MA #4", display = display.data_window)
ma4 = ma(ma4_source, ma4_length, ma4_type)
p41 =plot(show_ma4 ? ma4 : na, color = ma4_color, linewidth = alllinewidth, title="MA №4")
p42 =plot(show_ma4 ? ma4[2] : na, color = ma4_color, linewidth = alllinewidth, title="MA №4")

show_ma5   = input(true, "MA №5", inline="MA #5", display = display.data_window)
ma5_type   = input.string("SMA", "", inline="MA #5", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA", "TEMA", "HMA", "DEMA", "LSMA"])
ma5_source = input(close  , "", inline="MA #5", display = display.data_window)
ma5_length = input.int(20 , "", inline="MA #5", minval=1)
ma5_color  = input(#f60c0c, "", inline="MA #5", display = display.data_window)
ma5 = ma(ma5_source, ma5_length, ma4_type)
p51 =plot(show_ma5 ? ma5 : na, color = ma5_color, linewidth = alllinewidth, title="MA №5")
p52 =plot(show_ma5 ? ma5[2] : na, color = ma5_color, linewidth = alllinewidth, title="MA №5")


switchColor = input(true, 'Color MA according to trend?', group="Double MA Channel")

Color1 = switchColor ? ma1 > ma1[2] ? #02f413 : #ff0000 : #ffffff
Color2 = switchColor ? ma2 > ma2[2] ? #07ac04 : #ff4040 : #ffffff
Color3 = switchColor ? ma3 > ma3[2] ? #20811d : #ff8080 : #ffffff
Color4 = switchColor ? ma4 > ma4[2] ? #1c4a1b : #ffa080 : #ffffff
Color5 = switchColor ? ma5 > ma5[2] ? #1c6a3b : #ffc080 : #ffffff

//
fill(p11, p12, title='Band Filler MA #1', color=color.new(Color1,0), transp=switchColor ? 70 : 100)
fill(p21, p22, title='Band Filler MA #2', color=color.new(Color2,0), transp=switchColor ? 70 : 100)
fill(p31, p32, title='Band Filler MA #3', color=color.new(Color3,0), transp=switchColor ? 70 : 100)
fill(p41, p42, title='Band Filler MA #4', color=color.new(Color4,0), transp=switchColor ? 70 : 100)
fill(p51, p52, title='Band Filler MA #5', color=color.new(Color5,0), transp=switchColor ? 70 : 100)

//end script
